% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_docker.R
\name{docker_file}
\alias{docker_file}
\title{Create a Dockerfile}
\usage{
docker_file(
  dockerfile = "inst/dockerfiles/Dockerfile",
  which_pkgs = c("loaded", "installed"),
  name = "rstudio",
  tag = NULL,
  include_python = FALSE
)
}
\arguments{
\item{dockerfile}{Default location is in the \verb{inst/dockerfiles/} folder. Build will save the final \code{Dockerfile}
to this location. You can also add you're own Dockerfile, however, this package was primarily designed to launch
an active project into a Rstudio container from rocker version.}

\item{which_pkgs}{Provide a string of either \code{loaded} or \code{installed}. \code{Loaded} will included packages that are currently
loaded in your active project session. The \code{installed} string will included everything inside you local default R library. Already
installed packages are skipped when the  \link{docker_build} command is run. If you have a large package library it is
recommended to only install \code{loaded} as you deveop you workflow.}

\item{name}{The Rocker name of the stack that you want to build off. To see the current stack options
load the \link{data_rocker_table}.}

\item{tag}{A character string of the require version. If no tag is supplied then the function will default to \code{latest}.}

\item{include_python}{Flag to install python using the rocker scripts \url{https://github.com/rocker-org/rocker-versioned2} which have had minor modifications. Future updates
will see this streamlined. \code{Pandas} and \code{numpy} modules are also installed if this flag is set to \code{TRUE}.}
}
\description{
This function creates a dockerfile based off the rocker version image stacks and reads
from session information to included \code{loaded }or \code{installed} R libraries. the \code{install2.r} handles
additional package installs and will skip already installed packages on the rocker stack image.
}
